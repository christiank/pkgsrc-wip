$NetBSD$

Fully control the library name via LIBNAMESUFFIX
And the ARCH_ thing.

--- Makefile.system.orig	2019-08-11 21:23:27.000000000 +0000
+++ Makefile.system
@@ -15,13 +15,13 @@ ARCH := $(shell uname -m)
 endif
 
 # Catch conflicting usage of ARCH in some BSD environments
-ifeq ($(ARCH), amd64)
+ifeq ($(ARCH_), amd64)
 override ARCH=x86_64
-else ifeq ($(ARCH), powerpc64)
+else ifeq ($(ARCH_), powerpc64)
 override ARCH=power
-else ifeq ($(ARCH), i386)
+else ifeq ($(ARCH_), i386)
 override ARCH=x86
-else ifeq ($(ARCH), aarch64)
+else ifeq ($(ARCH_), aarch64)
 override ARCH=arm64
 endif
 
@@ -143,7 +143,7 @@ endif
 
 
 # On x86_64 build getarch with march=native. This is required to detect AVX512 support in getarch.
-ifeq ($(ARCH), x86_64)
+ifeq ($(ARCH_), x86_64)
 ifneq ($(C_COMPILER), PGI)
 GETARCH_FLAGS += -march=native
 endif
@@ -285,6 +285,7 @@ MD5SUM = md5 -r
 endif
 
 ifneq (,$(findstring $(OSNAME), FreeBSD OpenBSD DragonFly))
+EXTRALIB	+= -lm      -Wl,-R/stuff/sw/env/system-gcc/pkgsrc/cvs-20190321/lib
 MD5SUM = md5 -r
 endif
 
@@ -341,7 +342,7 @@ endif
 
 # Ensure the correct stack alignment on Win32
 # http://permalink.gmane.org/gmane.comp.lib.openblas.general/97
-ifeq ($(ARCH), x86)
+ifeq ($(ARCH_), x86)
 CCOMMON_OPT += -mincoming-stack-boundary=2
 FCOMMON_OPT += -mincoming-stack-boundary=2
 endif
@@ -383,8 +384,8 @@ CCOMMON_OPT	+= -DQUAD_PRECISION
 NO_EXPRECISION = 1
 endif
 
-ifneq ($(ARCH), x86)
-ifneq ($(ARCH), x86_64)
+ifneq ($(ARCH_), x86)
+ifneq ($(ARCH_), x86_64)
 NO_EXPRECISION = 1
 endif
 endif
@@ -413,7 +414,7 @@ endif
 #  Architecture dependent settings
 #
 
-ifeq ($(ARCH), x86)
+ifeq ($(ARCH_), x86)
 ifndef BINARY
 NO_BINARY_MODE	= 1
 endif
@@ -439,7 +440,7 @@ endif
 endif
 endif
 
-ifeq ($(ARCH), x86_64)
+ifeq ($(ARCH_), x86_64)
 
 ifeq ($(CORE), generic)
 NO_EXPRECISION = 1
@@ -503,12 +504,12 @@ endif
 
 
 ifeq ($(DYNAMIC_ARCH), 1)
-ifeq ($(ARCH), x86)
+ifeq ($(ARCH_), x86)
 DYNAMIC_CORE = KATMAI COPPERMINE NORTHWOOD PRESCOTT BANIAS \
 	       CORE2 PENRYN DUNNINGTON NEHALEM ATHLON OPTERON OPTERON_SSE3 BARCELONA BOBCAT ATOM NANO
 endif
 
-ifeq ($(ARCH), x86_64)
+ifeq ($(ARCH_), x86_64)
 DYNAMIC_CORE = PRESCOTT CORE2 
 ifeq ($(DYNAMIC_OLDER), 1)
 DYNAMIC_CORE += PENRYN DUNNINGTON 
@@ -542,14 +543,14 @@ CCOMMON_OPT += $(XCCOMMON_OPT)
 #CCOMMON_OPT	+= -DDYNAMIC_LIST='$(DYNAMIC_LIST)'
 endif
 
-ifeq ($(ARCH), arm64)
+ifeq ($(ARCH_), arm64)
 DYNAMIC_CORE =  ARMV8
 DYNAMIC_CORE += CORTEXA57
 DYNAMIC_CORE += THUNDERX
 DYNAMIC_CORE += THUNDERX2T99
 endif
 
-ifeq ($(ARCH), power)
+ifeq ($(ARCH_), power)
 DYNAMIC_CORE = POWER6
 DYNAMIC_CORE += POWER8
 DYNAMIC_CORE += POWER9
@@ -561,7 +562,7 @@ override DYNAMIC_ARCH=
 endif
 endif
 
-ifeq ($(ARCH), ia64)
+ifeq ($(ARCH_), ia64)
 NO_BINARY_MODE	= 1
 BINARY_DEFINED	= 1
 
@@ -573,16 +574,16 @@ endif
 endif
 endif
 
-ifeq ($(ARCH), $(filter $(ARCH),mips64 mips))
+ifeq ($(ARCH_), $(filter $(ARCH_),mips64 mips))
 NO_BINARY_MODE	= 1
 endif
 
-ifeq ($(ARCH), alpha)
+ifeq ($(ARCH_), alpha)
 NO_BINARY_MODE	= 1
 BINARY_DEFINED	= 1
 endif
 
-ifeq ($(ARCH), arm)
+ifeq ($(ARCH_), arm)
 NO_BINARY_MODE  = 1
 BINARY_DEFINED  = 1
 
@@ -604,7 +605,7 @@ endif
 endif
 endif
 
-ifeq ($(ARCH), arm64)
+ifeq ($(ARCH_), arm64)
 NO_BINARY_MODE  = 1
 BINARY_DEFINED  = 1
 endif
@@ -630,14 +631,14 @@ endif
 
 ifdef NO_BINARY_MODE
 
-ifeq ($(ARCH), $(filter $(ARCH),mips64))
+ifeq ($(ARCH_), $(filter $(ARCH_),mips64))
 ifdef BINARY64
 CCOMMON_OPT += -mabi=64
 else
 CCOMMON_OPT += -mabi=n32
 endif
 BINARY_DEFINED = 1
-else ifeq ($(ARCH), $(filter $(ARCH),mips))
+else ifeq ($(ARCH_), $(filter $(ARCH_),mips))
 CCOMMON_OPT += -mabi=32
 BINARY_DEFINED = 1
 endif
@@ -772,13 +773,13 @@ ifneq ($(NO_LAPACK), 1)
 EXTRALIB += -lgfortran
 endif
 ifdef NO_BINARY_MODE
-ifeq ($(ARCH), $(filter $(ARCH),mips64))
+ifeq ($(ARCH_), $(filter $(ARCH_),mips64))
 ifdef BINARY64
 FCOMMON_OPT += -mabi=64
 else
 FCOMMON_OPT += -mabi=n32
 endif
-else ifeq ($(ARCH), $(filter $(ARCH),mips))
+else ifeq ($(ARCH_), $(filter $(ARCH_),mips))
 FCOMMON_OPT += -mabi=32
 endif
 else
@@ -882,7 +883,7 @@ endif
 endif
 endif
 
-ifeq ($(ARCH), $(filter $(ARCH),mips64 mips))
+ifeq ($(ARCH_), $(filter $(ARCH_),mips64 mips))
 ifndef BINARY64
 FCOMMON_OPT += -n32
 else
@@ -912,7 +913,7 @@ endif
 
 ifeq ($(C_COMPILER), OPEN64)
 
-ifeq ($(ARCH), $(filter $(ARCH),mips64 mips))
+ifeq ($(ARCH_), $(filter $(ARCH_),mips64 mips))
 ifndef BINARY64
 CCOMMON_OPT += -n32
 else
@@ -938,7 +939,7 @@ endif
 
 ifeq ($(C_COMPILER), SUN)
 CCOMMON_OPT  += -w
-ifeq ($(ARCH), x86)
+ifeq ($(ARCH_), x86)
 CCOMMON_OPT  += -m32
 else
 FCOMMON_OPT  += -m64
@@ -947,7 +948,7 @@ endif
 
 ifeq ($(F_COMPILER), SUN)
 CCOMMON_OPT  += -DF_INTERFACE_SUN
-ifeq ($(ARCH), x86)
+ifeq ($(ARCH_), x86)
 FCOMMON_OPT  += -m32
 else
 FCOMMON_OPT  += -m64
@@ -1008,7 +1009,7 @@ ifeq ($(NO_AVX), 1)
 CCOMMON_OPT	+= -DNO_AVX
 endif
 
-ifeq ($(ARCH), x86)
+ifeq ($(ARCH_), x86)
 CCOMMON_OPT	+= -DNO_AVX
 endif
 
@@ -1023,7 +1024,7 @@ endif
 ifdef SMP
 CCOMMON_OPT	+= -DSMP_SERVER
 
-ifeq ($(ARCH), mips64)
+ifeq ($(ARCH_), mips64)
 ifneq ($(CORE), LOONGSON3B)
 USE_SIMPLE_THREADED_LEVEL3 = 1
 endif
@@ -1098,9 +1099,9 @@ else
 LIBPREFIX = lib$(LIBNAMEBASE)
 endif
 
-KERNELDIR	= $(TOPDIR)/kernel/$(ARCH)
+KERNELDIR	= $(TOPDIR)/kernel/$(ARCH_)
 
-include $(TOPDIR)/Makefile.$(ARCH)
+include $(TOPDIR)/Makefile.$(ARCH_)
 
 CCOMMON_OPT	+= -DASMNAME=$(FU)$(*F) -DASMFNAME=$(FU)$(*F)$(BU) -DNAME=$(*F)$(BU) -DCNAME=$(*F) -DCHAR_NAME=\"$(*F)$(BU)\" -DCHAR_CNAME=\"$(*F)\"
 
@@ -1116,8 +1117,8 @@ ifneq ($(OSNAME), Linux)
 NO_AFFINITY = 1
 endif
 
-ifneq ($(ARCH), x86_64)
-ifneq ($(ARCH), x86)
+ifneq ($(ARCH_), x86_64)
+ifneq ($(ARCH_), x86)
 ifneq ($(CORE), LOONGSON3B)
 NO_AFFINITY = 1
 endif
@@ -1242,31 +1243,15 @@ ifndef LIBSUFFIX
 LIBSUFFIX = a
 endif
 
-ifneq ($(DYNAMIC_ARCH), 1)
-ifndef SMP
-LIBNAME		= $(LIBPREFIX)_$(LIBCORE)$(REVISION).$(LIBSUFFIX)
-LIBNAME_P	= $(LIBPREFIX)_$(LIBCORE)$(REVISION)_p.$(LIBSUFFIX)
-else
-LIBNAME		= $(LIBPREFIX)_$(LIBCORE)p$(REVISION).$(LIBSUFFIX)
-LIBNAME_P	= $(LIBPREFIX)_$(LIBCORE)p$(REVISION)_p.$(LIBSUFFIX)
-endif
-else
-ifndef SMP
-LIBNAME		= $(LIBPREFIX)$(REVISION).$(LIBSUFFIX)
-LIBNAME_P	= $(LIBPREFIX)$(REVISION)_p.$(LIBSUFFIX)
-else
-LIBNAME		= $(LIBPREFIX)p$(REVISION).$(LIBSUFFIX)
-LIBNAME_P	= $(LIBPREFIX)p$(REVISION)_p.$(LIBSUFFIX)
-endif
-endif
-
+LIBNAME		= $(LIBPREFIX).$(LIBSUFFIX)
+LIBNAME_P	= $(LIBPREFIX)_p.$(LIBSUFFIX)
 
 LIBDLLNAME   = $(LIBPREFIX).dll
 IMPLIBNAME   = lib$(LIBNAMEBASE).dll.a
 ifneq ($(OSNAME), AIX)
-LIBSONAME    = $(LIBNAME:.$(LIBSUFFIX)=.so)
+LIBSONAME    = $(LIBNAME:.$(LIBSUFFIX)=.so).$(MAJOR_VERSION)
 else
-LIBSONAME    = $(LIBNAME:.$(LIBSUFFIX)=.a)
+LIBSONAME    = $(LIBNAME:.$(LIBSUFFIX)=.a).$(MAJOR_VERSION)
 endif
 LIBDYNNAME   = $(LIBNAME:.$(LIBSUFFIX)=.dylib)
 LIBDEFNAME   = $(LIBNAME:.$(LIBSUFFIX)=.def)
@@ -1297,7 +1282,7 @@ LIB_COMPONENTS = CBLAS
 endif
 
 export OSNAME
-export ARCH
+export ARCH_
 export CORE
 export LIBCORE
 export PGCPATH
