$NetBSD$

--- mkspecs/features/platform.prf.orig	2019-08-19 08:19:35.000000000 +0000
+++ mkspecs/features/platform.prf
@@ -11,56 +11,11 @@ defineTest(isQtMinimum) {
 
 defineTest(isPlatformSupported) {
   QT_FOR_CONFIG += gui-private
-  linux {
     if(!gcc:!clang)|intel_icc {
-      skipBuild("Qt WebEngine on Linux requires clang or GCC.")
+      skipBuild("Qt WebEngine requires clang or GCC.")
       return(false)
     }
     gcc:!clang:!isGCCVersionSupported(): return(false)
-  } else:win32 {
-    winrt {
-      skipBuild("WinRT is not supported.")
-      return(false)
-    }
-    isBuildingOnWin32() {
-      skipBuild("Qt WebEngine on Windows must be built on a 64-bit machine.")
-    }
-    !msvc|intel_icl {
-      skipBuild("Qt WebEngine on Windows requires MSVC or Clang (MSVC mode).")
-      return(false)
-    }
-    !isMinWinSDKVersion(10, 16299): {
-      skipBuild("Qt WebEngine on Windows requires a Windows SDK version 10.0.16299 or newer.")
-      return(false)
-    }
-    !qtConfig(webengine-winversion) {
-         skipBuild("Needs Visual Studio 2017 or higher")
-         return(false)
-    }
-  } else:osx {
-    # FIXME: Try to get it back down to 8.2 for building on OS X 10.11
-    !isMinXcodeVersion(8, 3, 3) {
-      skipBuild("Using Xcode version $$QMAKE_XCODE_VERSION, but at least version 8.3.3 is required to build Qt WebEngine.")
-      return(false)
-    }
-    !clang|intel_icc {
-        skipBuild("Qt WebEngine on macOS requires Clang.")
-        return(false)
-    }
-    # We require macOS 10.12 (darwin version 16.0.0) or newer.
-    darwin_major_version = $$section(QMAKE_HOST.version, ., 0, 0)
-    lessThan(darwin_major_version, 16) {
-      skipBuild("Building Qt WebEngine requires macOS version 10.12 or newer.")
-      return(false)
-    }
-    !isMinOSXSDKVersion(10, 12): {
-      skipBuild("Building Qt WebEngine requires a macOS SDK version of 10.12 or newer. Current version is $${WEBENGINE_OSX_SDK_PRODUCT_VERSION}.")
-      return(false)
-    }
-  } else {
-    skipBuild("Unknown platform. Qt WebEngine only supports Linux, Windows, and macOS.")
-    return(false)
-  }
 
   # QMAKE doesn't set c++14 for MSVC2017, so only test for gcc and clang (which pretends to be gcc)
   gcc:!contains(QT_CONFIG, c++14) {
